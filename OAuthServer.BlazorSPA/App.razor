@using OAuthServer.BlazorSPA.Providers;
@inject TestDatabase database;
@inject AuthenticationStateProvider stateProvider;

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="@OnNavigateAsync">
        <Found Context="routeData">
            @*<RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />*@
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" >
                    <Authorizing>
                        <text>Please wait, we are authorizint the user.</text>
                    </Authorizing>
                    <NotAuthorized>
                         <OAuthServer.BlazorSPA.Pages.Index />
                        @*@if (context.User.Identity?.IsAuthenticated != true)
                        {
                            <RedirectToLogin />
                        }
                        else
                        {
                            <p role="alert">You are not authorized to access this resource.</p>
                        }*@
                    </NotAuthorized>
                </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private async Task OnNavigateAsync(NavigationContext args)
    {

        if (database.ContainsKey("IsAuthenticated") && database["IsAuthenticated"] == "Y")
        {
            (stateProvider as AuthenticationProvider).NotifyUserAuthentication();
        }
    }
}
